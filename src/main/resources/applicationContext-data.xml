<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/bestoyc"/>
		<property name="user" value="root"/>
		<property name="password" value="root"/>
	</bean>

	<!-- 配置 hibernate 的sessionFactory -->
	<bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 配置数据源属性 -->
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan">
			<list>
				<value>cn.com.bestoyc.**.entity</value>
			</list>
		</property>
		<!-- 配置hibernate 的基本属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	<!-- 配置dao层的类 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<!-- 注入sessionFactory，dao需要先继承HibernateDaoSupport才会有sessionFactory属性 -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<!--加载配置文件 datasource.properties -->
	<!--<bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:datasource.properties</value>
			</list>
		</property>
	</bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="properties"/>
	</bean>

	&lt;!&ndash; 配置c3p0数据源 &ndash;&gt;
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${datasource.driver}"/>
		<property name="jdbcUrl" value="${datasource.url}"/>
		<property name="user" value="${datasource.username}"/>
		<property name="password" value="${datasource.password}"/>

		<property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
		<property name="minPoolSize" value="${c3p0.minPoolSize}"/>
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
		<property name="maxStatements" value="${c3p0.maxStatements}"/>
		<property name="numHelperThreads" value="${c3p0.numHelperThreads}"/>
		<property name="preferredTestQuery" value="${c3p0.preferredTestQuery}"/>
		<property name="testConnectionOnCheckout" value="${c3p0.testConnectionOnCheckout}"/>
	</bean>

	<bean id="nativeJdbcExtractor" class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor" lazy-init="true"/>

	&lt;!&ndash; Annotation 配置sessionFactory，配置数据库连接，注入hibernate数据库配置 &ndash;&gt;
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan">
			<list>
				<value>cn.com.bestoyc.**.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				&lt;!&ndash; 链接释放策略 on_close | after_transaction | after_statement | auto  &ndash;&gt;
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
			</props>
		</property>
	</bean>-->

	<!-- 事务管理器，注入sessionFactory  -->
	<!--<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>-->

	<!-- 配置事务的传播特性 -->
	<!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="execute*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>-->

	<!-- 配置那些类、方法纳入到事务的管理 -->
	<!--<aop:config>
		<aop:pointcut expression="execution(* cn.com.bestoyc.**.service.impl.*.*(..))" id="transactionManagerMethod"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionManagerMethod" />
	</aop:config>-->
</beans>